// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import 'frb_generated.dart';
import 'models.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

PillMomApi createApi() => RustLib.instance.api.crateApiCreateApi();

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<PillMomApi>>
abstract class PillMomApi implements RustOpaqueInterface {
  Future<void> closeDatabase();

  Future<PlatformInt64> createMedication(
      {required String name,
      required String dosage,
      required String description});

  Future<PlatformInt64> createReminder(
      {required PlatformInt64 medicationId,
      required String time,
      required String days,
      required bool isActive});

  Future<bool> deleteMedication({required PlatformInt64 id});

  Future<bool> deleteReminder({required PlatformInt64 id});

  Future<List<Reminder>> getActiveReminders();

  Future<List<Medication>> getAllMedications();

  Future<void> initLocalDatabase({required String path});

  Future<void> initTursoDatabase(
      {required String url, required String authToken});

  factory PillMomApi() => RustLib.instance.api.crateApiPillMomApiNew();

  /// Connect to an embedded replica (local SQLite that syncs with remote)
  /// Note: Currently using remote connection due to FFI issues with embedded replicas
  Future<void> openEmbeddedReplica(
      {required String path,
      required String url,
      required String authToken,
      double? syncPeriod});

  /// Connect to an in-memory database (no persistence)
  Future<void> openInMemory();

  /// Connect to a local SQLite database file
  Future<void> openLocal({required String path});

  /// Connect to a remote Turso database
  Future<void> openRemote({required String url, required String authToken});

  Future<PlatformInt64> syncDatabase();

  Future<bool> updateMedication({required Medication medication});

  Future<bool> updateReminder({required Reminder reminder});
}
